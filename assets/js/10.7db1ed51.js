(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{251:function(e,t,a){e.exports=a.p+"assets/img/app-crash.5c12bf07.png"},252:function(e,t,a){e.exports=a.p+"assets/img/application-insights-1.16059de7.png"},283:function(e,t,a){"use strict";a.r(t);var s=a(5),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Ever launched a fancy new app, only to realize shortly after going live that things had ground to a halt? In a frenzy to get things running again, you realize that testing with 2 or 3 users under optimal conditions simply wasn't good enough.")]),e._v(" "),s("p",[s("em",[e._v("In this multipart series we will investigate simple techniques that can be used to ensure that your app keeps running at scale.")])]),e._v(" "),s("p",[s("img",{attrs:{src:a(251),alt:"App Crash"}})]),e._v(" "),s("blockquote",[s("p",[e._v("Much of the content in this series is take directly from a real-life app built for "),s("a",{attrs:{href:"https://oslofjord.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("Oslofjord Convention Center"),s("OutboundLink")],1),e._v("\nbacked by a microservice based infrastructure running ASP.Net Core on Docker Swarm.")])]),e._v(" "),s("h2",{attrs:{id:"who-is-this-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#who-is-this-for"}},[e._v("#")]),e._v(" Who Is This For?")]),e._v(" "),s("p",[e._v("This series is aimed at web application, web API and mobile app developers.")]),e._v(" "),s("p",[e._v("Many of the examples will be based on the tools we use most frequently: Visual Studio, Microsoft Azure, ASP.Net Core and Docker Swarm.\nThe principals however, can be applied to almost any web application stack.")]),e._v(" "),s("h2",{attrs:{id:"an-introductory-lesson-keep-your-requests-fast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#an-introductory-lesson-keep-your-requests-fast"}},[e._v("#")]),e._v(" An Introductory Lesson: Keep Your Requests Fast")]),e._v(" "),s("p",[e._v("Imagine a scenario where you've just sent a push notification with a promotion to thousands of users.\nWithin seconds, hundreds of users will be hitting your APIs at virtually the same time.")]),e._v(" "),s("p",[e._v("If all your content is static, that's probably just fine. But what if you're authenticating your user, loading a user profile and loading some custom content,\nthings might quickly look quite different.")]),e._v(" "),s("p",[e._v("The first thing you might notice is that things really start slowing down, and by inspecting your web server logs you'll probably see HTTP "),s("code",[e._v("500")]),e._v(", "),s("code",[e._v("503")]),e._v(", "),s("code",[e._v("504")]),e._v(" or even "),s("code",[e._v("502")]),e._v("\nerrors popping up.")]),e._v(" "),s("h3",{attrs:{id:"what-do-these-http-errors-mean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-do-these-http-errors-mean"}},[e._v("#")]),e._v(" What Do These HTTP Errors Mean?")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("500 Server Error")]),e._v(" is a very generic error which basically means an exception has been thrown. At this point, having some form of logging available would be a great help, but given the circumstances some sort of database timeout or resource exhaustion is a likely scenario.")]),e._v(" "),s("li",[s("code",[e._v("502 Bad Gateway")]),e._v(" means you are running a reverse proxy and the underlying service is not available. A common scenario in a microservice/container based environment where a container has just crashed.")]),e._v(" "),s("li",[s("code",[e._v("503 Service Unavailable")]),e._v(" means your web server has stopped servicing requests. This may be because the process has crashed, or quite likely that all available sockets have been exhausted.")]),e._v(" "),s("li",[s("code",[e._v("504 Gateway Timeout")]),e._v(" similarly to 502 means you are running a reverse proxy and the underlying service has become unresponsive. Another common scenario in a microservice/container based environment.")])]),e._v(" "),s("h3",{attrs:{id:"start-with-your-logs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-with-your-logs"}},[e._v("#")]),e._v(" Start With Your Logs")]),e._v(" "),s("p",[e._v("Obviously checking logs for basic errors is a great place to start, but if your problems are related to timeouts or resource exhaustion, which is likely under high load, we need to look further.")]),e._v(" "),s("p",[e._v("It might also be tempting to start scaling up your server, increasing memory limits, gateway timeouts, socket limits etc. These are all options worth exploring, but don't necessarily solve the real underlying problems.")]),e._v(" "),s("blockquote",[s("p",[e._v("The bottom line is that that you need to identify your bottlenecks and ensure that every link in your chain of service and database calls is returning fast!")])]),e._v(" "),s("h3",{attrs:{id:"identifying-bottlenecks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#identifying-bottlenecks"}},[e._v("#")]),e._v(" Identifying Bottlenecks")]),e._v(" "),s("p",[e._v("In our experience, a great tool for analysing bottlenecks across services is "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Application Insights"),s("OutboundLink")],1),e._v(".\nThis tool allows us to trace calls from service to service and provides extremely detailed telemetry. There are many other similar tools such as Stackify and New Relic which provide similar insights.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(252),alt:"Application Insights Example"}})]),e._v(" "),s("p",[e._v("However, performing a post-mortem becomes tricky once the web server simply stops processing requests ("),s("code",[e._v("503")]),e._v(") and no logs are available.")]),e._v(" "),s("blockquote",[s("p",[e._v("At this point the value of systematic load testing, prior to going into production, becomes more obvious.")])]),e._v(" "),s("h2",{attrs:{id:"optimization-at-all-levels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#optimization-at-all-levels"}},[e._v("#")]),e._v(" Optimization at All Levels")]),e._v(" "),s("p",[e._v("Once we've identified a bottleneck, the fun really starts. There are a multitude of options available for performance tuning before you even consider scaling up your hardware:")]),e._v(" "),s("ul",[s("li",[e._v("Database optimizations (particularly indexing and data access methods)")]),e._v(" "),s("li",[e._v("Server-side caching")]),e._v(" "),s("li",[e._v("Http caching")]),e._v(" "),s("li",[e._v("Asynchronous programming")]),e._v(" "),s("li",[e._v("Web server tuning")])]),e._v(" "),s("p",[e._v("The list goes on...")]),e._v(" "),s("h2",{attrs:{id:"what-to-expect-next"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-to-expect-next"}},[e._v("#")]),e._v(" What To Expect Next")]),e._v(" "),s("p",[e._v("In the follow up posts, we'll be investigating the optimization techniques listed above in more depth. We'll also consider patterns that\nallow you to provide user specific content at scale.")]),e._v(" "),s("h2",{attrs:{id:"posts-in-this-series"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#posts-in-this-series"}},[e._v("#")]),e._v(" Posts in this Series")]),e._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/2020/02/13/building-scalable-apps-1-introduction/"}},[e._v("Building Scalable Apps (Part 1) - Introduction")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/2020/02/14/building-scalable-apps-2-database-optimization/"}},[e._v("Building Scalable Apps (Part 2) - Database Optimization")])],1),e._v(" "),s("li",[e._v("Building Scalable Apps (Part 3) - Server Caching Techniques "),s("em",[e._v("(Planned)")])]),e._v(" "),s("li",[e._v("Building Scalable Apps (Part 4) - Async Programming "),s("em",[e._v("(Planned)")])]),e._v(" "),s("li",[e._v("Building Scalable Apps (Part 5) - Http Optimizations "),s("em",[e._v("(Planned)")])]),e._v(" "),s("li",[e._v("Building Scalable Apps (Part 6) - Event Driven Architectures "),s("em",[e._v("(Planned)")])]),e._v(" "),s("li",[e._v("Building Scalable Apps (Part 7) - Realistic Load Testing "),s("em",[e._v("(Planned)")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);